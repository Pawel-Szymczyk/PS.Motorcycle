@attribute [Authorize]

@page "/manager/"

<MessagePopupComponent Title="@this.messageTitle" 
                       Message="@this.message" 
                       Type="@this.messageType" 
                       OnClick="ClickHandler" />





<div style="height: inherit;">
    
    <div class="breadcrumbs-container">
        <BreadcrumbComponent Breadcrumbs="@this.Breadcrumbs"></BreadcrumbComponent>
    </div>

    <div class="container-fluid">
        <div class="toolbar-container">
            <div class="toolbar">
                <div class="d-grid gap-2 d-md-block">
                    <AddButtonComponent Path="/manager/create-motorcycle" Text="Add Motorcycle" />

                    @if(this.selectedRow)
                    {
                        <EditButtonComponent Id="@this.selectedRowId" Path="@this.editPath" Text="Edit Motorcycle" />
                        <DeleteButtonComponent OnClick="DeleteClickHandler" />
                    }

                </div>
            </div>
        </div>
    </div>

    @if(this.pagedItems is null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <div class="container-fluid" style="height: calc(100% - 10rem); overflow-y: auto; padding-top: 1em; padding-bottom: 1em;">

            <div class="filter-container" style="padding: 10px 30px;">
                @*<SearchFilterComponent />*@
                
                <div class="row">
                    <div class="col">
                        <div class="form-group">
                            <label style="display: flex; align-items: center; justify-content: flex-start; align-content: center; max-width: 9em;">
                                Show&nbsp;
                                <select class="form-control" value="@this.defaultPageSize" @onchange="@this.OnChangePageSize">
                                    <option>10</option>
                                    <option>25</option>
                                    <option>50</option>
                                    <option>100</option>
                                </select>&nbsp;entries  
                            </label>
                        </div>
                    </div>
                    <div class="col">
                        <input placeholder="Search..." type="text" class="form-control" @onchange="@this.OnChangeSearch"/>
                    </div>
                    
                
                    
                </div>
                
 

            </div>

            <div class="results-container">
                <div class="row row-cols-1 row-cols-md-3 g-4 motorcycles-list">

                    <table class="table table-striped table-hover">
                         
                        <thead class="thead-light">
                            <tr>
                                <th scope="col">#</th>
                                @*<th scope="col">Id</th>*@
                                <th scope="col" asp-route-sortOrder="@this.OnChangeOrder">Make</th>
                                <th scope="col">Model</th>
                                <th scope="col">Type</th>
                                <th scope="col">Fuel Capacity</th>
                                <th scope="col">Production Year</th>
                                <th scope="col">Price</th>
                                <th scope="col">Rate</th>
                                <th scope="col">Create Date</th>
                                <th scope="col">Update Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var motorcycle in this.pagedItems.Items)
                            {
                             
                                //string path = $"/motorcycle/{motorcycle.Id}";

                                string activeRow = motorcycle.Equals(this.SelectedMotorcycle) ? "table-active" : null;
                                bool activeCheckbox = motorcycle.Equals(this.SelectedMotorcycle) ? true : false;

                                // TODO: There maybe need to update this code to allow to select multiple rows at once.
                               
                                <tr class="@activeRow" @onclick="() => { this.OnClick(motorcycle); this.SelectedMotorcycle = motorcycle; }">
                                    <td>
                                        <div class="form-check">
                                            <input class="form-check-input" type="checkbox" checked="@activeCheckbox" >
                                        </div>
                                    </td>
                                    @*<td>@motorcycle.Id.ToString()</td>*@
                                    <td>@motorcycle.Make</td>
                                    <td>@motorcycle.Model</td>
                                    <td>@motorcycle.BodyType</td>
                                    <td>@motorcycle.FuelCapacity</td>
                                    <td>@motorcycle.Year.ToString()</td>
                                    <td>@motorcycle.Price</td>
                                    <td>@motorcycle.Rate</td>
                                    <td>@motorcycle.CreateDate</td>
                                    <td>@motorcycle.UpdateDate</td>
                                </tr>
           
                            }
                        </tbody>
                    </table>
                    
                </div>

            </div>
        </div>

        <div class="container-fluid">

            <div>
                 <div class="row">
                     <div class="col" style="display: flex; align-content: center; align-items: center; justify-content: flex-start;">
                         <caption>Showing @this.pagedItems.Paging.CurrentPage to @this.defaultPageSize of @this.pagedItems.Paging.TotalItems entires</caption>
                     </div>
                     <div class="col">

                         <nav aria-label="Page navigation example">
                            <ul class="pagination" style="padding: 5px 0; justify-content: flex-end; margin: 0;">
                                <li class="page-item">
                                    <a class="page-link" aria-label="Previous" onclick="@(async () => await this.ReturnPreviousPageClickHandler())">
                                    <span aria-hidden="true">&laquo;</span>
                                    </a>
                                </li>

                                    @for(int i = this.pagedItems.Paging.StartPage; i <= this.pagedItems.Paging.TotalPages; i++)
                                    {
                                        int index = i;
                                        <li class="page-item"><a class="page-link @i" onclick="@(async () => await this.ReturnPageClickHandler(index))">@i</a></li>
                                    }


                                <li class="page-item">
                                    <a class="page-link" aria-label="Next" onclick="@(async () => await this.ReturnNextPageClickHandler())">
                                    <span aria-hidden="true">&raquo;</span>
                                    </a>
                                </li>
                            </ul>
                        </nav>

                     </div>
                 </div>
            </div>

        </div>

    }
        
    <FooterComponent />

</div>

